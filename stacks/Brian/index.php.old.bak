<?php 
//date_default_timezone_set("Europe/London");

require "/home/vhosts/stacks.eu5.org/public_html/Brian/Functions1-2.inc";
set_error_handler("fnErrorHandler",E_ALL);

$callString = filter_input(INPUT_GET,'go');

if ($callString == null) {
	echo "go message not found";
	fnCommentLog("go parameters not found");
	//fnLogMessageToDb("go parameters not found");
	fnErrorHandler(0,"go parameters not found"); }
	//error_log("go parameters not found",3,"../../Brian/error_log.txt");}   
else {
	
	fnDbConnect();
	
	$fnResp = fnProcessInput($callString);
	echo $fnResp;
	//fnDisplayTable($fnResp);
		
	include "/home/vhosts/stacks.eu5.org/public_html/Brian/GC1.inc";
		
	fnDbDisconnect(); }

	
function fnDisplayTable($inputString) {
	fnLogMessageToDb("start display table");
	//only do this if the input is a game status string
	//if (substr($inputString,4,4) != "game") {return;}
	
	
	//find game reference
	$inx = strpos($inputString,"gameRef",0);
	$inx2 = strpos($inputString,"=",$inx);
	$inx3 = strpos($inputString,";",$inx2);
	$gameRef = substr($inputString,$inx2+1,$inx3-$inx2-1);
	$gameRow = fnQrySelectGame($gameRef);
	
	echo "<p>";
	echo "<table border = 1>";
	echo "<tr>";
	echo "<td>" . "P1 Reserve" . "</td>";
	for ($i=1; $i<=$gameRow['AreaSize']; $i++) {
		echo "<td>" . "Stack" . $i . "</td>";
	}
	echo "<td>" . "P2 Reserve" . "</td>";
	echo "</tr>";

	$stackRows = fnQrySelectStacks($gameRef,0);
	//loop through the rows of the table 
	for ($hSub=($gameRow['AreaSize']+2)*2; $hSub>=1; $hSub--) {
		//set new row
		echo "<tr>"; 
		//loop through the columns from left to right
		for ($sSub=0; $sSub<=$gameRow['AreaSize']+1; $sSub++) {
			if ($stackRows[$sSub]['StackHeight'] == $hSub) {
				echo "<td>" . $stackRows[$sSub]['Top'] . "</td>"; }
			else {
				echo "<td>" . "" . "</td>"; }
		}
		//set end of row
		echo "</tr>";
	}
	 
}
	
?>